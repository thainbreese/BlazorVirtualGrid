@using BlazorVirtualGrid.App.Services

<div class="grid-vscroll">
    <div class="grid-vscroll-wrapper">
        <div class="grid-vscroll-track @showClass" ref="Track" onmousedown="@OnThumbMove"></div>
        <div class="grid-vscroll-up @showClass" onmousedown="@OnScrollUp">
            <i class="fas fa-chevron-up"></i>
        </div>
        <div class="grid-vscroll-down @showClass" onmousedown="@OnScrollDown">
            <i class="fas fa-chevron-down"></i>
        </div>
        <div class="grid-vscroll-thumb @showClass"
             style="height: @(thumbSize)px;
                    top: @(thumbPosition)px;
                    @(gridService.VScrolling() ? "width:100%;right:0": null)"
             onmousedown="@OnMouseDown"></div>
    </div>
</div>

@functions {
    [CascadingParameter] VGrid ContainerGrid { get; set; }

    GridService gridService { get; set; }

    ElementRef Track;

    string showClass
    {
        get
        {
            return gridService.VScrolling() ? "show" : null;
        }
    }

    int thumbSize
    {
        get
        {
            return gridService.GetVScrollbarThumbSize();
        }
    }

    int thumbPosition
    {
        get
        {
            return gridService.GetVScrollbarThumbPosition();
        }
    }

    protected override void OnInit()
    {
        gridService = ContainerGrid.gridService;
        base.OnInit();
    }

    void OnMouseDown(UIMouseEventArgs e)
    {
        gridService.VScrollStart((int)e.ClientY);
    }

    async void OnThumbMove(UIMouseEventArgs e)
    {
        int top = await Track.GetTop();
        gridService.VScrollMove((int)e.ClientY - top);
    }

    void OnScrollUp()
    {
        gridService.VScrollUp();
    }

    void OnScrollDown()
    {
        gridService.VScrollDown();
    }
}